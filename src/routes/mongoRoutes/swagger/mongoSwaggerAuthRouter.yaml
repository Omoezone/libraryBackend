openapi: 3.0.0
info:
  title: User Authentication API
  description: API for user signup, login, and verification using MongoDB
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /mongo/auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized - Something went wrong with user login
      security:
        - BearerAuth: []

  /mongo/auth/signup:
    post:
      summary: User signup
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: Successful response
        '409':
          description: Conflict - Email already exists
        '500':
          description: Internal Server Error - Something went wrong with user signup
      security:
        - BearerAuth: []

  /mongo/auth/verify:
    post:
      summary: Verify user with JWT token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyUserRequest'
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized - Invalid or expired token
      security:
        - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    SignupRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - first_name
        - last_name
        - email
        - password

    VerifyUserRequest:
      type: object
      properties:
        authToken:
          type: string
      required:
        - authToken
